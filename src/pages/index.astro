---
import { Image } from "astro:assets";

import Selfie from "../static/selfie.jpg";

import Layout from "../layouts/Layout.astro";

import LinkedInIcon from "../components/icons/LinkedInIcon.astro";
import GitHubIcon from "../components/icons/GitHubIcon.astro";
import TwitchIcon from "../components/icons/TwitchIcon.astro";
import OnlyFansIcon from "../components/icons/OnlyFansIcon.astro";

import CircleIcon from "../components/icons/CircleIcon.astro";
import RectangleIcon from "../components/icons/RectangleIcon.astro";
import SquareIcon from "../components/icons/SquareIcon.astro";
import StarIcon from "../components/icons/StarIcon.astro";
import TriangleIcon from "../components/icons/TriangleIcon.astro";
import XIcon from "../components/icons/XIcon.astro";
---

<Layout
  title="Devguerreiro's Portfolio"
  description="Welcome to my personal website"
>
  <main class="h-screen lg:h-auto">
    <div
      id="content"
      class="mt-24 lg:mt-0 lg:pt-40 flex flex-col items-center lg:flex-row lg:justify-around xl:gap-16"
    >
      <div id="greeting" class="relative md:w-1/2 lg:w-2/5 xl:w-1/3 2xl:w-1/4">
        <div id="introduction" class="text-light_text dark:text-dark_text">
          <h1 class="font-kelly_slab text-2xl lg:text-3xl">
            <b class="text-primary">Whatsup</b>, ü§ô
          </h1>
          <h2 class="mt-4 font-baskerville text-lg lg:text-xl tracking-wider">
            I'm <i
              class="px-2 py-1 tiny-shadow font-roboto text-dark_contrast dark:text-light_contrast bg-light_contrast dark:bg-dark_contrast"
              >devguerreiro</i
            > and I work as a <b
              class="text-dark_contrast dark:text-light_contrast leading-loose"
              >Software Engineer</b
            >
          </h2>
          <button id="crazy_handshake-button" class="btn-primary w-full">
            GimMe a CraZy HandShaKe ü§ù
          </button>
        </div>
        <div class="bg-details">
          <TriangleIcon class="absolute -top-12 left-0 -z-10" size={35} />
          <StarIcon class="absolute -top-16 right-32 -z-10" size={30} />
          <CircleIcon class="absolute top-0 right-0 -z-10" size={40} />
        </div>
      </div>
      <div
        id="selfie"
        class="w-60 lg:w-64 xl:w-72 h-60 lg:h-64 xl:h-72 relative mt-16 lg:mt-0 p-2 border-2 border-primary rounded-md flex justify-center"
      >
        <Image class="object-cover" src={Selfie} alt="A selfie photo of me" />
        <div
          id="socials"
          class="w-full absolute -bottom-28 flex justify-between text-light_text dark:text-dark_text"
        >
          <a
            id="linkedin"
            href="https://linkedin.com/in/devguerreiro"
            target="_blank"
          >
            <LinkedInIcon class="social-icon" />
          </a>
          <a id="github" href="https://github.com/devguerreiro" target="_blank">
            <GitHubIcon class="social-icon" />
          </a>
          <a id="twitch" href="https://twitch.tv/devguerreiro" target="_blank">
            <TwitchIcon class="social-icon" />
          </a>
          <a
            id="onlyfans"
            href="https://paodiario.org/devocional/"
            target="_blank"
          >
            <OnlyFansIcon class="social-icon" />
          </a>
        </div>
        <div class="bg-details">
          <SquareIcon class="absolute -top-6 right-0 -z-10" size={50} />
          <XIcon class="absolute -bottom-8 -left-8 -z-10" size={75} />
          <RectangleIcon
            class="absolute -bottom-8 right-0 -z-10"
            width={120}
            height={20}
          />
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  const baseUrl = "https://tenor.googleapis.com/v2/search?";
  const params = {
    q: "crazy handshake",
    key: import.meta.env.PUBLIC_TENOR_API_KEY,
    client_key: import.meta.env.PUBLIC_TENOR_API_CLIENT_ID,
    limit: "1",
    random: "true",
    media_filter: "minimal",
  };

  const getGif = async () => {
    const selfie = document.querySelector("#selfie") as HTMLElement;
    const selfieImg = selfie?.querySelector("#selfie > img") as HTMLElement;

    selfieImg.classList.add("hidden");

    const message = document.createElement("p");
    message.innerText = "Searching the best GIF for you...";
    message.classList.add("px-2", "py-1", "text-primary");

    selfie.appendChild(message);

    const response = await fetch(baseUrl + new URLSearchParams(params), {
      method: "GET",
    });
    if (response.status == 200) {
      const thanks = document.createElement("h2");
      thanks.classList.add(
        "absolute",
        "-top-10",
        "text-primary",
        "font-kelly_slab",
        "font-bold",
        "uppercase"
      );
      thanks.innerText = "Yoh! Thanks! ü´Ç";

      const data = await response.json();

      const gif = data.results[0].media_formats.gif;
      const gifWidth = gif.dims[0] + "px";
      const gifHeight = gif.dims[1] + "px";

      selfieImg.setAttribute("src", gif.url);
      selfieImg.setAttribute("width", gifWidth);
      selfieImg.setAttribute("height", gifHeight);

      return new Promise<void>((resolve) => {
        setTimeout(() => {
          selfie.removeChild(message);
          selfie.appendChild(thanks);
          selfieImg.classList.remove("hidden");
          resolve();
        }, 1000);
      });
    }
    return new Promise<void>((resolve) => {
      setTimeout(() => {
        selfie.removeChild(message);
        message.innerText = "Some error occurred";
        selfie.appendChild(message);

        setTimeout(() => {
          selfie.removeChild(message);
          selfieImg.classList.remove("hidden");
          resolve();
        }, 2000);
      }, 1000);
    });
  };

  const crazyHandshakeButton = document.querySelector(
    "#crazy_handshake-button"
  );
  crazyHandshakeButton?.addEventListener(
    "click",
    async () => {
      crazyHandshakeButton.setAttribute("disabled", "disabled");
      await getGif();
    },
    { once: true }
  );
</script>
